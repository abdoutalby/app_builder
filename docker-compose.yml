services:
  spring-api:
    build:
      context: spring-api
      dockerfile: spring-api/Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/elite_app_builder?createDatabaseIfNotExists=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: abderrahmentalby@gmail.com
      SPRING_MAIL_PASSWORD: hojrgrortvcybnnf
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      SPRING_MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL: smtp
      SPRING_MAIL_PROPERTIES_MAIL_DEBUG: "true"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend
    user: root

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: elite_app_builder
      MYSQL_PASSWORD: ""
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  frontend:
    build:
      context: ./angular_app_builder
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - spring-api
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mysql_data:
    driver: local
